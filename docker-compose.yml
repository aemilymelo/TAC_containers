# A versão do arquivo não é mais necessária nas versões mais recentes do Docker Compose.
services:
  # Serviço 1: API Gateway com NGINX
  # Este serviço atua como ponto de entrada, roteando o tráfego
  frontend:
    container_name: frontend
    build:
      context: ./cliente-pixel
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
  
  nginx:
  image: nginx:stable-alpine
  container_name: nginx_gateway
  ports:
    - "80:80"
  volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  depends_on:
    - frontend
    - pixel
    - api-node-pixel
  restart: unless-stopped


  # Serviço 2: API Spring Boot (Java)
  pixel:
    container_name: api_spring_boot
    build:
      context: ./Pixel
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword
    restart: unless-stopped

  # Serviço 3: API Express (Node.js)
  api-node-pixel:
    container_name: api_express_node
    build:
      context: ./api-node-pixel
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - mongo-db
    environment:
      - DB_HOST=mongo-db
      - DB_PORT=27017
      - DB_NAME=mydatabase
    restart: unless-stopped

  # Serviço 4: Banco de Dados PostgreSQL
  postgres-db:
    image: postgres:14-alpine
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    restart: unless-stopped

  # Serviço 5: Banco de Dados MongoDB
  mongo-db:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  jenkins:
    container_name: jenkins_controller
    # A linha 'image' foi substituída por esta seção 'build'.
    # Ela diz ao Docker para construir a imagem a partir do nosso Dockerfile customizado.
    build:
      context: .
      dockerfile: jenkins.Dockerfile
    privileged: true
    user: root # Inicia como root para ter acesso ao socket do docker
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
  postgres_data:
  mongo_data:
  jenkins_data: